#to find the height of an object by calculating the time between two audio peaks
import pyaudio
import numpy as np
import wave
import scipy.signal as signal

FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 44100 
CHUNK = 1024
RECORD_SECONDS = 5 
OUTPUT_FILENAME = "output.wav"

audio = pyaudio.PyAudio()

stream = audio.open(format=FORMAT, channels=CHANNELS,
                    rate=RATE, input=True,
                    frames_per_buffer=CHUNK)

print("Recording...")

frames = []
for _ in range(int(RATE / CHUNK * RECORD_SECONDS)):
    data = stream.read(CHUNK)
    frames.append(data)

print("Recording finished.")

stream.stop_stream()
stream.close()
audio.terminate()

wf = wave.open(OUTPUT_FILENAME, 'wb')
wf.setnchannels(CHANNELS)
wf.setsampwidth(audio.get_sample_size(FORMAT))
wf.setframerate(RATE)
wf.writeframes(b''.join(frames))
wf.close()

wf = wave.open(OUTPUT_FILENAME, 'rb')
frames = wf.readframes(wf.getnframes())
wf.close()

audio_data = np.frombuffer(frames, dtype=np.int16)

peaks, _ = signal.find_peaks(audio_data, height=np.max(audio_data) * 0.6, distance=RATE//10)

if len(peaks) >= 2:
    peak_times = peaks / RATE  # Convert sample indices to time (seconds)
    time_diff = peak_times[1] - peak_times[0]
    print(f"Time difference between two highest peaks: {time_diff:.4f} seconds")
    #calculating height of the object using the formula h = 1/2 * g * t^2
    g = 9.81
    t = time_diff
    ans = (1/2)*g*(t**2)
    print(ans*100)
else:
    print("Not enough peaks detected.")
